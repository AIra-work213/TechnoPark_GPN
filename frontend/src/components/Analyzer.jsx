import React, { use, useEffect, useState } from 'react';
import FileUpload from './FileUpload';
// –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
import CryptoJS from "crypto-js";

function Analyzer() {
  const [coreFile, setCoreFile] = useState(null);
  const [coreFileText, setCoreFileText] = useState(null);
  const [additionalFiles, setAdditionalFiles] = useState([]);
  const [uploadedData, setUploadedData] = useState(false);

  const handleCoreFileChange = (file, text) => {
    setCoreFile(file);
    setCoreFileText(text);
    console.log("–ó–∞–≥—Ä—É–∂–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª:", file?.name);
  };

  const handleAdditionalFilesChange = (files, text) => {
    setAdditionalFiles([files, text]);
    console.log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:", [files, text]);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!coreFile) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª.");
      return;
    }
    // –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ useEffect
    else {
      setUploadedData(true)
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  useEffect(() => {
    if (uploadedData) {
      try {
        // –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        const filesData = ([
          {
            "id": CryptoJS.SHA256(coreFile.name).toString(CryptoJS.enc.Hex),
            "doc_name": coreFile.name,
            "summary": "",
            "extrainfo": "",
            "text": coreFileText,
            "is_root": true,
            "is_visited": false
          }
        ])
        console.log("1:",additionalFiles[0])
        additionalFiles[0].forEach(element => {
          filesData.push({
            "id": CryptoJS.SHA256(element.name).toString(CryptoJS.enc.Hex),
            "doc_name": element.name,
            "summary": "",
            "extrainfo": "",
            "text": additionalFiles[1][additionalFiles[0].indexOf(element)],
            "is_root": false,
            "is_visited": false
          })
        })
        
        fetch('http://localhost:8080/api/takeDocs', {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify(filesData),
        })
        .then(response => response.json())
        .then(data => {
          console.log('–û—Ç–≤–µ—Ç:', data);
        })
        .catch((error) => {
          console.error('–û—à–∏–±–∫–∞:', error);
        });
        console.log(filesData);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤:", error);
      }
    }
  }, [uploadedData]);

  return (
    <div className="analyzer-container">
      <div className="left-panel">
        <h3>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞</h3>
        <p className="description">–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ò–ò</p>

        <div className="upload-section">
          <h4>–û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞</h4>
          <FileUpload
            label="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å—é–¥–∞ –≤–∞—à –∫–æ—Ä–Ω–µ–≤–æ–π —Ñ–∞–π–ª"
            onChange={handleCoreFileChange}
            accept=".pdf,.docx,.txt"
          />
          <FileUpload
            label="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å—é–¥–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã"
            onChange={handleAdditionalFilesChange}
            multiple={true}
            accept=".pdf,.docx,.txt,.jpg,.png"
          />
        </div>

        <button className={`analyze-button ${coreFile || additionalFiles.length > 0 ? 'loaded' : ''}`} onClick={handleSubmit}> {/* (–∏–∑–º–µ–Ω—ë–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞) –¥–æ–±–∞–≤–ª–µ–Ω –∫–ª–∞—Å—Å loaded –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ñ–∞–π–ª */}
          <span className="icon">ü§ñ</span> –ê–Ω–∞–ª–∏–∑ —Å –ø–æ–º–æ—â—å—é –ò–ò
        </button>
      </div>

      <div className="right-panel">
        <div className="ready-state">
          <div className="icon-circle">
            <span className="loading-icon">‚öôÔ∏è</span>
          </div>
          <h4>–ì–æ—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å</h4>
          <p>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ê–Ω–∞–ª–∏–∑ —Å –ø–æ–º–æ—â—å—é –ò–ò¬ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
          </p>
        </div>
      </div>
    </div>
  );
}

export default Analyzer;